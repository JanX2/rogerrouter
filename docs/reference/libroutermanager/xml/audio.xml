<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
  <!ENTITY % gtkdocentities SYSTEM "../xml/gtkdocentities.ent">
  %gtkdocentities;
]>
<refentry id="libroutermanager-audio">
<refmeta>
<refentrytitle role="top_of_page" id="libroutermanager-audio.top_of_page">audio</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBROUTERMANAGER Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>audio</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsect1 id="libroutermanager-audio.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="routermanager-audio-register">routermanager_audio_register</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">struct <link linkend="audio"><returnvalue>audio</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="audio-get-default">audio_get_default</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gpointer"><returnvalue>gpointer</returnvalue></link>
</entry><entry role="function_name"><link linkend="audio-open">audio_open</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gsize"><returnvalue>gsize</returnvalue></link>
</entry><entry role="function_name"><link linkend="audio-read">audio_read</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gsize"><returnvalue>gsize</returnvalue></link>
</entry><entry role="function_name"><link linkend="audio-write">audio_write</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="audio-close">audio_close</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GSList"><returnvalue>GSList</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="audio-get-plugins">audio_get_plugins</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="audio-set-default">audio_set_default</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="audio-init">audio_init</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="libroutermanager-audio.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="AUDIO-OUTPUT:CAPS">AUDIO_OUTPUT</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="AUDIO-INPUT:CAPS">AUDIO_INPUT</link></entry></row>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="audio">audio</link></entry></row>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="audio-device">audio_device</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>


<refsect1 id="libroutermanager-audio.description" role="desc">
<title role="desc.title">Description</title>

</refsect1>
<refsect1 id="libroutermanager-audio.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="routermanager-audio-register" role="function">
<title>routermanager_audio_register&#160;()</title>
<indexterm zone="routermanager-audio-register"><primary>routermanager_audio_register</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
routermanager_audio_register (<parameter><type>struct audio</type> *audio</parameter>);</programlisting>
</refsect2>
<refsect2 id="audio-get-default" role="function">
<title>audio_get_default&#160;()</title>
<indexterm zone="audio-get-default"><primary>audio_get_default</primary></indexterm>
<programlisting language="C">struct <link linkend="audio"><returnvalue>audio</returnvalue></link>&#160;*
audio_get_default (<parameter><type>void</type></parameter>);</programlisting>
</refsect2>
<refsect2 id="audio-open" role="function">
<title>audio_open&#160;()</title>
<indexterm zone="audio-open"><primary>audio_open</primary></indexterm>
<programlisting language="C"><link linkend="gpointer"><returnvalue>gpointer</returnvalue></link>
audio_open (<parameter><type>void</type></parameter>);</programlisting>
</refsect2>
<refsect2 id="audio-read" role="function">
<title>audio_read&#160;()</title>
<indexterm zone="audio-read"><primary>audio_read</primary></indexterm>
<programlisting language="C"><link linkend="gsize"><returnvalue>gsize</returnvalue></link>
audio_read (<parameter><link linkend="gpointer"><type>gpointer</type></link> audio_priv</parameter>,
            <parameter><link linkend="guchar"><type>guchar</type></link> *data</parameter>,
            <parameter><link linkend="gsize"><type>gsize</type></link> size</parameter>);</programlisting>
</refsect2>
<refsect2 id="audio-write" role="function">
<title>audio_write&#160;()</title>
<indexterm zone="audio-write"><primary>audio_write</primary></indexterm>
<programlisting language="C"><link linkend="gsize"><returnvalue>gsize</returnvalue></link>
audio_write (<parameter><link linkend="gpointer"><type>gpointer</type></link> audio_priv</parameter>,
             <parameter><link linkend="guchar"><type>guchar</type></link> *data</parameter>,
             <parameter><link linkend="gsize"><type>gsize</type></link> size</parameter>);</programlisting>
</refsect2>
<refsect2 id="audio-close" role="function">
<title>audio_close&#160;()</title>
<indexterm zone="audio-close"><primary>audio_close</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
audio_close (<parameter><link linkend="gpointer"><type>gpointer</type></link> audio_priv</parameter>);</programlisting>
</refsect2>
<refsect2 id="audio-get-plugins" role="function">
<title>audio_get_plugins&#160;()</title>
<indexterm zone="audio-get-plugins"><primary>audio_get_plugins</primary></indexterm>
<programlisting language="C"><link linkend="GSList"><returnvalue>GSList</returnvalue></link>&#160;*
audio_get_plugins (<parameter><type>void</type></parameter>);</programlisting>
</refsect2>
<refsect2 id="audio-set-default" role="function">
<title>audio_set_default&#160;()</title>
<indexterm zone="audio-set-default"><primary>audio_set_default</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
audio_set_default (<parameter><link linkend="gchar"><type>gchar</type></link> *name</parameter>);</programlisting>
</refsect2>
<refsect2 id="audio-init" role="function">
<title>audio_init&#160;()</title>
<indexterm zone="audio-init"><primary>audio_init</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
audio_init (<parameter><type>struct profile</type> *profile</parameter>);</programlisting>
</refsect2>

</refsect1>
<refsect1 id="libroutermanager-audio.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="AUDIO-OUTPUT:CAPS" role="macro">
<title>AUDIO_OUTPUT</title>
<indexterm zone="AUDIO-OUTPUT:CAPS"><primary>AUDIO_OUTPUT</primary></indexterm>
<programlisting language="C">#define AUDIO_OUTPUT 0
</programlisting>
</refsect2>
<refsect2 id="AUDIO-INPUT:CAPS" role="macro">
<title>AUDIO_INPUT</title>
<indexterm zone="AUDIO-INPUT:CAPS"><primary>AUDIO_INPUT</primary></indexterm>
<programlisting language="C">#define AUDIO_INPUT  1
</programlisting>
</refsect2>
<refsect2 id="audio" role="struct">
<title>struct audio</title>
<indexterm zone="audio"><primary>audio</primary></indexterm>
<programlisting language="C">struct audio {
	/* Name of plugin */
	const gchar *name;
	/* Initialize function */
	gboolean (*init)(guchar channels, gushort rate, guchar bits);
	/* Open device for playback */
	gpointer (*open)(void);
	/* Write data to audio device */
	gsize (*write)(gpointer priv, guchar *buffer, gsize len);
	/* Read data of audio device */
	gsize (*read)(gpointer priv, guchar *buffer, gsize max_len);
	/* Close audio device */
	gboolean (*close)(gpointer priv);
	/* Shutdown audio device */
	gboolean (*deinit)(void);
	/* Get possible audio input/output devices */
	GSList *(*get_devices)(void);
};
</programlisting>
</refsect2>
<refsect2 id="audio-device" role="struct">
<title>struct audio_device</title>
<indexterm zone="audio-device"><primary>audio_device</primary></indexterm>
<programlisting language="C">struct audio_device {
	gchar *name;
	gchar *internal_name;
	gchar type;
};
</programlisting>
</refsect2>

</refsect1>

</refentry>
